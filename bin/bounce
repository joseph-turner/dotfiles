#!/usr/local/bin/zsh

autoload colors; colors

# Removes node_modules folder and reinstalls it
# Return early if there's no package.json
[[ ! -a "./package.json" ]] && echo "$fg[red]No package.json present$reset_color" && return 1

usage() {
  echo "usage: bounce [<options>]"
  echo
  echo "    -f            force reinstall node modules"
  echo "    -h            display this message"
  echo
}

inst() {
  echo
  echo "Installing modules..."
  echo
  yarn
}

reinst() {
  echo "removing ./node_modules"
  rm -rf "./node_modules"
  echo
  echo "Reinstalling modules..."
  echo
  yarn
}

while getopts "fh" opt; do
  case $opt in
    f)
      reinst
      ;;
    h)
      usage
      return 0
      ;;
    \?)
      echo "$fg[yellow]Invalid option: -$OPTARG $reset_color"
      usage
      return 1
      ;;
    :)
      echo "$fg[yellow]Option -$OPTARG requires an argument$reset_color"
      usage
      return 1
      ;;
  esac
done
shift "$((OPTIND-1))"

[[ ! -d "./node_modules" ]] && inst && return 0

# Attempt to cut time by using `yarn check` if available
if echo "$fg[cyan]Checking node modules...$reset_color" && yarn check --verify-tree &> /dev/null; then
    echo "$fg[green]Packages are up to date. Pull to get new changes or keep on keepin' on!$reset_color"
else
    echo
    echo "$fg[cyan]Changes in node modules detected...$reset_color"
    reinst
fi
