#!/usr/local/bin/zsh

autoload colors; colors

local check=0
local stashed

while getopts "C" opt; do
  case $opt in
    C)
      check=false
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      return 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument"
      return 1
      ;;
  esac
done
shift $((OPTIND -1))

local branch=$(git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)")
[[ -z $branch ]] && echo "Current branch (`git rev-parse --abbrev-ref HEAD`) has no upstream" && exit 1
local pkg=false
local nvm=false
echo "Merging from $branch"
echo

git fetch --prune origin

# check for yarn.lock and set dep
# check for .nvmrc and set nvm
if [[ $check = 0 ]]; then
  local gdiff=`git diff --name-only "$branch"`
  [[ $(grep "yarn.lock" <<< $gdiff) ]] && dep=true
  [[ $(grep ".nvmrc" <<< $gdiff) ]] && nvm=true
fi

if git conditional-stash; then
  stashed=1
fi

git merge "$branch" || git conflicts

[[ $stashed == '1' ]] && g stash pop

function update_dep() {
  echo
  echo "Changes detected in yarn.lock"
  echo
  bounce
}

function update_node() {
  echo
  echo "Change detected in .nvmrc"
  echo
  nvm use
}

[[ $dep = true ]] && update_dep
[[ $nvm = true ]] && update_node
